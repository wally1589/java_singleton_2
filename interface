// this is the interface that interacts with the main class
// Interface ui = Interface.getInstance();


package wallyrodriguez_week1_singleton;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Interface {

    private static final Interface Singlenton = new Interface();

    public static Interface getInstance() 
        {
        return Singlenton;
        }

    private Interface()
        {
        }
    public void display(String text) 
        {
        System.out.println(text);
        }

    public void displayPrompt(String text) 
        {
        System.out.print(text);
        }

    //This method will display the interface
    public void displayTitle(String title) {
        StringBuilder titleBar = new StringBuilder();
        for (int i = 0; i < 40; i++) {
            titleBar.append("-");
        }
        StringBuilder titleBarText = new StringBuilder();
        for (int i = 0; i < (18 - title.length() / 2); i++) {
            titleBarText.append(" ");
        }
        titleBarText.append(title);
        for (int i = titleBarText.length(); i < 38; i++) {
            titleBarText.append(" ");
        }

        spacer();
        display(titleBar.toString());
        display("|" + titleBarText.toString() + "|");
        display(titleBar.toString());
    }

    // This will display an error message
    public void displayError(String text)
        {
        spacer();
        display("!!!  ERROR: " + text);
        spacer();
        }
    public String readInputString()     
        {
        String in = "";
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        try 
            {
            in = br.readLine();
            } 
        catch (IOException e) 
            {
            displayError("Input failure - " + e.getMessage());
            }
        return in;
        }
    public int readInputInt()
        {
        return Integer.parseInt(readInputString());
        }

    public void spacer() 
        {
        System.out.print(System.lineSeparator());
        }

}
